{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DentalServiceService {\n  getAllByServ() {\n    throw new Error('Method not implemented.');\n  }\n  getallservDental() {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8083';\n    getAllByServ();\n    any;\n    {\n      return this.http.get(`${this.baseUrl}/getallserv`);\n    }\n  }\n}\nDentalServiceService.ɵfac = function DentalServiceService_Factory(t) {\n  return new (t || DentalServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nDentalServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: DentalServiceService,\n  factory: DentalServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["DentalServiceService","getAllByServ","Error","getallservDental","constructor","http","baseUrl","any","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\AngularTutorial\\DentalClinicProject\\DentalClinicProject\\src\\app\\dental-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DentalServiceService {\n  getAllByServ() {\n    throw new Error('Method not implemented.');\n  }\n  getallservDental() {\n    throw new Error('Method not implemented.');\n  }\n\n  baseUrl='http://localhost:8083';\n\n  constructor(private http:HttpClient){\n\n      \n    getAllByServ():any \n    {\n\n    return this.http.get(`${this.baseUrl}/getallserv`);\n  }\n\n\n}\n\n\n\n}\n"],"mappings":";;AAMA,OAAM,MAAOA,oBAAoB;EAC/BC,YAAYA,CAAA;IACV,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EACAC,gBAAgBA,CAAA;IACd,MAAM,IAAID,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAIAE,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,OAAO,GAAC,uBAAuB;IAK7BL,YAAY,EAAE;IAACM,GAAG;IAClB;MAEA,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAG,IAAI,CAACF,OAAO,aAAa,CAAC;;EAItD;;AApBaN,oBAAoB,C;mBAApBA,oBAAoB,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAApBZ,oBAAoB,C;SAApBA,oBAAoB;EAAAa,OAAA,EAApBb,oBAAoB,CAAAc,IAAA;EAAAC,UAAA,EAFnB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}