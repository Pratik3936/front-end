{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ServicesService {\n  getOnePatient(patientsId) {\n    throw new Error('Method not implemented.');\n  }\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8083';\n  }\n  createPatient(patients) {\n    console.log(patients);\n    return this.http.post(`${this.baseUrl}/save`, patients);\n  }\n}\nServicesService.ɵfac = function ServicesService_Factory(t) {\n  return new (t || ServicesService)(i0.ɵɵinject(i1.HttpClient));\n};\nServicesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ServicesService,\n  factory: ServicesService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ServicesService","getOnePatient","patientsId","Error","constructor","http","baseUrl","createPatient","patients","console","log","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\AngularTutorial\\DentalClinicProject\\DentalClinicProject\\src\\app\\Services\\services.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Patients } from '../model/Patients';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicesService {\n  getOnePatient(patientsId: number) {\n    throw new Error('Method not implemented.');\n  }\n\n  baseUrl='http://localhost:8083';\n  constructor(private http:HttpClient){}\n\n  createPatient(patients: Patients) {\n    console.log(patients);\n    return this.http.post(`${this.baseUrl}/save`,patients);\n  }\n\n}\n"],"mappings":";;AAOA,OAAM,MAAOA,eAAe;EAC1BC,aAAaA,CAACC,UAAkB;IAC9B,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;EAGAC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAC,uBAAuB;EACM;EAErCC,aAAaA,CAACC,QAAkB;IAC9BC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,OAAO,IAAI,CAACH,IAAI,CAACM,IAAI,CAAC,GAAG,IAAI,CAACL,OAAO,OAAO,EAACE,QAAQ,CAAC;EACxD;;AAXWR,eAAe,C;mBAAfA,eAAe,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAff,eAAe,C;SAAfA,eAAe;EAAAgB,OAAA,EAAfhB,eAAe,CAAAiB,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}